{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/audio/plugins/audio-plugin.js","webpack:///./core/audio/audio-source.js","webpack:///./demos/simple.js","webpack:///./core/player/player.js","webpack:///./core/audio/plugins/volume-plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","AudioPlugin","audioContext","_audioPlugin","AudioSource","_classCallCheck","this","ctx","window","AudioContext","webkitAudioContext","src","createBufferSource","volume","createGain","connect","destination","file","request","XMLHttpRequest","open","responseType","onload","plugin","decodeAudioData","response","buffer","e","console","log","then","CustomEvent","bind","send","int","start","float","gain","setTargetAtTime","currentTime","audioSrc","_audioSource2","default","load","_player2","add","_volumePlugin2","Player","audioSource","source","plugins","Map","pluginName","pluginClass","set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","VolumePlugin"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export default class AudioPlugin {\n    /**\n     * @param audioContext\n     */\n    connect(audioContext) {\n    }\n}","import AudioPlugin from \"./plugins/audio-plugin\";\n\nexport default class AudioSource {\n\n    constructor() {\n        /**\n         * @type {AudioContext}\n         */\n        this.ctx = new (window.AudioContext || window.webkitAudioContext)();\n        /**\n         * @type {AudioBufferSourceNode}\n         */\n        this.src = this.ctx.createBufferSource();\n        /**\n         * @type {GainNode}\n         */\n        this.volume = this.ctx.createGain();\n        this.src.connect(this.volume);\n        this.volume.connect(this.ctx.destination);\n\n    }\n\n    load(file) {\n        const request = new XMLHttpRequest();\n        request.open('GET', file, true);\n        request.responseType = 'arraybuffer';\n\n        request.onload = function () {\n            /**\n             * @type {AudioSource}\n             */\n            const plugin = this;\n            this.ctx.decodeAudioData(request.response, function (buffer) {\n                plugin.src.buffer = buffer;\n            }, function (e) {\n                console.log('Audio error! ', e);\n            }).then(function(){\n                return new CustomEvent(\"bufferready\");\n            });\n        }.bind(this);\n        request.send();\n    }\n\n    start(int) {\n        this.src.start(int);\n    }\n\n    gain(float) {\n        this.volume.gain.setTargetAtTime(float, this.ctx.currentTime, 0);\n    }\n}","// import BaseAudioContext from 'core/audio/context';\n// import Graph from \"../core/audio/nodes/graph-node\";\n// import Routing from \"../core/audio/routing\";\n// import AudioContext from \"../core/audio/context\";\n\nimport AudioSource from \"../core/audio/audio-source\";\nimport Player from \"../core/player/player\";\nimport VolumePlugin from \"../core/audio/plugins/volume-plugin\";\n\nlet track = './demos/audio/sample.mp3';\n\nlet audioSrc = new AudioSource();\naudioSrc.load(track);\n\n// audioSrc.gain(1);\n// audioSrc.start();\n\nlet player = new Player(audioSrc);\nplayer.add('_volume', new VolumePlugin());\n\n// 2 . In ctx create sources <audio>, oscillator, steam\n// ctx.createMediaElementSource();\n\n// 3 . Effects, reverb, biquad filter, panner, compressor\n\n// 4 . Destination\n\n// Sources + effects = Destination\n","import AudioPlugin from \"../audio/plugins/audio-plugin\";\nimport VolumePlugin from \"../audio/plugins/volume-plugin\";\n\nexport default class Player {\n    constructor (audioSource) {\n        /**\n         * @type {AudioSource}\n         */\n        this.source = audioSource;\n        /**\n         *\n         * @type {Map<string, AudioPlugin>}\n         */\n        this.plugins = new Map();\n    }\n\n    /**\n     * @param {string} pluginName\n     * @param {AudioPlugin} pluginClass\n     */\n    add(pluginName, pluginClass) {\n        // new VolumePlugin();\n// console.log((new (pluginClass))());\n        try {\n            this.plugins.set(pluginName, pluginClass);\n            pluginClass.connect(this.source.ctx);\n        } catch (e) {\n            console.log(e);\n        }\n            // this.plugins.set(pluginName, new (pluginClass.name)());\n        // else {\n            // error\n        // }\n    }\n\n    play() {\n        for(const plugin of this.plugins) {\n            plugin.connect();\n        }\n    }\n}","import AudioPlugin from \"./audio-plugin\";\n\nexport default class VolumePlugin extends AudioPlugin {\n    connect(audioContext)\n    {\n        audioContext.connect(this.ctx.destination);\n    }\n}"],"sourceRoot":""}